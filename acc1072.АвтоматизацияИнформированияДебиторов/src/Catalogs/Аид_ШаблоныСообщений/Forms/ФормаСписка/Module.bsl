///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.Список.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СправочникШаблоныСообщений.Ссылка КАК Ссылка,
		|	СправочникШаблоныСообщений.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА СправочникШаблоныСообщений.ПредназначенДляSMS
		|			ТОГДА &СообщениеSMS
		|		КОГДА СправочникШаблоныСообщений.Аид_ПредназначенДляГолосовогоСообщения
		|			ТОГДА &ГолосовоеСообщение
		|		ИНАЧЕ &ЭлектроннаяПочта
		|	КОНЕЦ КАК ШаблонДля,
		|	ВЫБОР
		|		КОГДА СправочникШаблоныСообщений.Назначение = """"
		|			ТОГДА &Общий
		|		ИНАЧЕ СправочникШаблоныСообщений.Назначение
		|	КОНЕЦ КАК Назначение,
		|	СправочникШаблоныСообщений.ВладелецШаблона КАК ВладелецШаблона,
		|	0 КАК ЕстьФайлы
		|ИЗ
		|	Справочник.Аид_ШаблоныСообщений КАК СправочникШаблоныСообщений
		|ГДЕ
		|	(&Назначение = """"
		|			ИЛИ СправочникШаблоныСообщений.Назначение = &Назначение)
		|	И (СправочникШаблоныСообщений.ВладелецШаблона = НЕОПРЕДЕЛЕНО
		|			ИЛИ СправочникШаблоныСообщений.ВладелецШаблона = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
		|			ИЛИ &ПоказыватьКонтекстныеШаблоны)";
	
	Аид_ДобавитьКомандыНаСервере();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,"Назначение","АИД",,,Истина);
	
	
	УстановитьУсловноеОформление();
	
	ИнициализироватьОтборы();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") Тогда
		ВключенаОтправкаSMS = Истина;
		ВключенаРаботаСПочтовымиСообщениями = Истина;
	Иначе
		ВключенаРаботаСПочтовымиСообщениями = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями");
		ВключенаОтправкаSMS = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ОтправкаSMS");
	КонецЕсли;
	
	// кнопки в группе, если одна кнопка, то группа не нужна
	Элементы.ФормаСоздатьШаблонСообщенияSMS.Видимость = ВключенаОтправкаSMS;
	Элементы.ФормаСоздатьШаблонЭлектронногоПисьма.Видимость = ВключенаРаботаСПочтовымиСообщениями;
	
	Элементы.ФормаПоказыватьКонтекстныеШаблоны.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ШаблоныСообщений" Тогда
		ИнициализироватьОтборы();
		УстановитьФильтрНазначение(Назначение);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НазначениеФильтрПриИзменении(Элемент)
	УстановитьФильтрНазначение(Назначение);
КонецПроцедуры

&НаКлиенте
Процедура ШаблонДляФильтрОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = "SMS" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Сообщения SMS'"), ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ВыбранноеЗначение = "Email" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Электронного письма'"), ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ВыбранноеЗначение = "ГолосовоеСообщение" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Голосовое сообщение'"), ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "ШаблонДля");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныСообщенийПечатныеФормыИВложения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Аид_ШаблоныСообщений.ПечатныеФормыИВложения КАК ШаблоныСообщенийПечатныеФормыИВложения
		|ГДЕ
		|	ШаблоныСообщенийПечатныеФормыИВложения.Ссылка В(&Аид_ШаблоныСообщений)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШаблоныСообщенийПечатныеФормыИВложения.Ссылка";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Аид_ШаблоныСообщенийПрисоединенныеФайлы.ВладелецФайла КАК Ссылка
		|ИЗ
		|	Справочник.Аид_ШаблоныСообщенийПрисоединенныеФайлы КАК Аид_ШаблоныСообщенийПрисоединенныеФайлы
		|ГДЕ
		|	Аид_ШаблоныСообщенийПрисоединенныеФайлы.ВладелецФайла В(&Аид_ШаблоныСообщений)
		|
		|СГРУППИРОВАТЬ ПО
		|	Аид_ШаблоныСообщенийПрисоединенныеФайлы.ВладелецФайла";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Аид_ШаблоныСообщений", Строки.ПолучитьКлючи());
	
	ШаблоныСВложениями = Запрос.Выполнить().Выгрузить();
	ШаблоныСВложениями.Свернуть("Ссылка");
	Для каждого ШаблонСообщений Из ШаблоныСВложениями Цикл
		СтрокаСписка = Строки[ШаблонСообщений.Ссылка];
		СтрокаСписка.Данные["ЕстьФайлы"] = 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьШаблонЭлектронногоПисьма(Команда)
	СоздатьШаблон("ЭлектронноеПисьмо");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблонСообщенияSMS(Команда)
	СоздатьШаблон("СообщениеSMS");
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьКонтекстныеШаблоны(Команда)
	Элементы.ФормаПоказыватьКонтекстныеШаблоны.Пометка = Не Элементы.ФормаПоказыватьКонтекстныеШаблоны.Пометка;
	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьКонтекстныеШаблоны", Элементы.ФормаПоказыватьКонтекстныеШаблоны.Пометка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьШаблон(ТипСообщения)
ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидСообщения",           ТипСообщения);
	ПараметрыФормы.Вставить("ПолноеИмяТипаОснования", Назначение);
	ПараметрыФормы.Вставить("МожноМенятьНазначение",  Истина);
	//Аид
	ПараметрыФормы.Вставить("ЭтоАИД",  				  Истина);
	//Аид
	ОткрытьФорму("Справочник.Аид_ШаблоныСообщений.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФильтрНазначение(Знач ВыбранноеЗначение)
	
	Если ПустаяСтрока(ВыбранноеЗначение) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Назначение");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Назначение", ВыбранноеЗначение, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура Аид_ШаблонДляФильтрОбработкаВыбораВместо(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = "SMS" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Сообщения SMS'"), ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ВыбранноеЗначение = "Email" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Электронного письма'"), ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ВыбранноеЗначение = "ГолосовоеСообщение" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ШаблонДля", НСтр("ru = 'Голосовое сообщение'"), ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "ШаблонДля");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Аид_ДобавитьКомандыНаСервере()
	
	//Добавляем новую команду
    КомандаСоздатьГС = ЭтотОбъект.Команды.Добавить("СоздатьШаблонГолосовогоСообщения");
    КомандаСоздатьГС.Действие  = "Аид_СоздатьШаблонГолосовогоСообщения";
    КомандаСоздатьГС.Заголовок = "Голосового сообщения";
    КомандаСоздатьГС.Подсказка = "Создать шаблон голосового сообщения";
	
    //Добавляем новую кнопку
    КнопкаФормыСоздатьГС = Элементы.Добавить("кн_КомандаСоздатьГС", Тип("КнопкаФормы"), Элементы.ФормаГруппаСоздать);
    КнопкаФормыСоздатьГС.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
    КнопкаФормыСоздатьГС.ИмяКоманды = "СоздатьШаблонГолосовогоСообщения";
	
КонецПроцедуры

&НаКлиенте
Процедура Аид_СоздатьШаблонГолосовогоСообщения()
	СоздатьШаблон("ГолосовоеСообщение");	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьОтборы()
	
	Элементы.НазначениеФильтр.СписокВыбора.Очистить();
	Элементы.ШаблонДляФильтр.СписокВыбора.Очистить();

	Список.Параметры.УстановитьЗначениеПараметра("Назначение", "");

	ВидыШаблонов = Аид_ШаблоныСообщенийСлужебный.ВидыШаблонов();
	ВидыШаблонов.Вставить(0, НСтр("ru = 'Электронных писем, SMS и голосовых сообщений'"), НСтр("ru = 'Электронных писем, SMS и голосовых сообщений'"));
	Список.Параметры.УстановитьЗначениеПараметра("СообщениеSMS", ВидыШаблонов.НайтиПоЗначению("SMS").Представление);
	Список.Параметры.УстановитьЗначениеПараметра("ЭлектроннаяПочта", ВидыШаблонов.НайтиПоЗначению("Email").Представление);
	Список.Параметры.УстановитьЗначениеПараметра("ГолосовоеСообщение", ВидыШаблонов.НайтиПоЗначению("ГолосовоеСообщение").Представление);
	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьКонтекстныеШаблоны", Ложь);

	Для каждого ВидШаблона Из ВидыШаблонов Цикл
		Элементы.ШаблонДляФильтр.СписокВыбора.Добавить(ВидШаблона.Значение, ВидШаблона.Представление);
	КонецЦикла;

	Элементы.НазначениеФильтр.СписокВыбора.Добавить("", НСтр("ru = 'Все'"));

	ОбщийПредставление = НСтр("ru = 'Общий'");
	Список.Параметры.УстановитьЗначениеПараметра("Общий",    ОбщийПредставление);
	Элементы.НазначениеФильтр.СписокВыбора.Добавить("Общий", ОбщийПредставление);

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Аид_ШаблоныСообщений.Назначение КАК Назначение,
	|	Аид_ШаблоныСообщений.ПолноеИмяТипаПараметраВводаНаОсновании КАК ПолноеИмяТипаПараметраВводаНаОсновании
	|ИЗ
	|	Справочник.Аид_ШаблоныСообщений КАК Аид_ШаблоныСообщений
	|ГДЕ
	|	Аид_ШаблоныСообщений.Назначение <> """" И Аид_ШаблоныСообщений.Назначение <> ""Служебный""
	|	И Аид_ШаблоныСообщений.Назначение <> &Общий
	|
	|СГРУППИРОВАТЬ ПО
	|	Аид_ШаблоныСообщений.Назначение, Аид_ШаблоныСообщений.ПолноеИмяТипаПараметраВводаНаОсновании
	|
	|УПОРЯДОЧИТЬ ПО
	|	Назначение";

	Запрос.УстановитьПараметр("Общий", ОбщийПредставление);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();

	Пока РезультатЗапроса.Следующий() Цикл
		Элементы.НазначениеФильтр.СписокВыбора.Добавить(РезультатЗапроса.ПолноеИмяТипаПараметраВводаНаОсновании, РезультатЗапроса.Назначение);
	КонецЦикла;

	Назначение = "";
	ШаблонДля = НСтр("ru = 'Электронных писем, SMS и голосовых сообщений'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Список.УсловноеОформление.Элементы.Очистить();
	Элемент = Список.УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ВладелецШаблона");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	Элемент = Список.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Назначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Аид_ШаблоныСообщенийКлиентСервер.ИдентификаторОбщий();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Аид_ШаблоныСообщенийКлиентСервер.ОбщийПредставление());
	
	ПриОпределенииНастроек =  Аид_ШаблоныСообщенийСлужебныйПовтИсп.ПриОпределенииНастроек();
	ПредметыШаблонов = ПриОпределенииНастроек.ПредметыШаблонов;
	
	Для каждого ПредметШаблона Из ПредметыШаблонов Цикл
	
		Элемент = Список.УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Назначение.Имя);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Назначение");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = ПредметШаблона.Имя;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПредметШаблона.Представление);
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблоныПоУмолчаниюНаСервере()
	Макет = Справочники.Аид_ШаблоныСообщений.ПолучитьМакет("Макет");
	
	КоличествоСтрок = Макет.ВысотаТаблицы;
	СоответствиеКолонок = ПолучитьСоответствиеКолонок();
	Масс = новый Массив;
	Для НомерСтроки = 2 По КоличествоСтрок Цикл 
		СтрокаДанных = "";
		СтруктураДанных = Новый Структура();
		Для Каждого ПолеСоответствия Из СоответствиеКолонок Цикл
			ТекущаяОбласть = Макет.ПолучитьОбласть("R"+Формат(НомерСтроки,"ЧГ=0") + "C"+Формат(ПолеСоответствия.Значение,"ЧГ=0")).ТекущаяОбласть;
			ЗначениеЯчейки = СокрЛП(ТекущаяОбласть.Текст);	
			Данные = СокрЛП(ЗначениеЯчейки);
			
			СтруктураДанных.Вставить(ПолеСоответствия.Ключ, Данные);
			СтрокаДанных = СтрокаДанных + Данные;
		КонецЦикла;
		
		Если Не ПустаяСтрока(СтрокаДанных) Тогда	
			Масс.Добавить(СтруктураДанных);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Стр Из Масс Цикл
		ШаблонСсылка = ПолучитьШаблон(Стр.Имя);
		Если ШаблонСсылка = Неопределено Тогда
			Шаблон = Справочники.Аид_ШаблоныСообщений.СоздатьЭлемент();
		иначе
			Шаблон = ШаблонСсылка.ПолучитьОбъект();
		КонецЕсли;			
		Если Стр.Вид = "Email"  Тогда
			Шаблон.ТекстШаблонаПисьма = СтрЗаменить(Стр.Текст,"$",""+Символы.ПС+"");
			Шаблон.ТекстШаблонаПисьмаHTML = Стр.Текст;
			Шаблон.Наименование = Стр.Имя;
			Шаблон.Назначение = "АИД";
			Шаблон.ПолноеИмяТипаПараметраВводаНаОсновании = "Обработка.Аид_ВиртуальныйМенеджер";
			Шаблон.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст;
			Шаблон.ПредназначенДляВводаНаОсновании = Истина;
			Шаблон.ПредназначенДляЭлектронныхПисем = Истина;
			Шаблон.Записать();
		ИначеЕсли Стр.Вид = "SMS"  Тогда
			Шаблон.ТекстШаблонаSMS = СтрЗаменить(Стр.Текст,"$",""+Символы.ПС+"");
			Шаблон.ТекстШаблонаПисьмаHTML = Стр.Текст;
			Шаблон.Наименование = Стр.Имя;
			Шаблон.Назначение = "АИД";
			Шаблон.ПолноеИмяТипаПараметраВводаНаОсновании = "Обработка.Аид_ВиртуальныйМенеджер";
			Шаблон.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст;
			Шаблон.ПредназначенДляВводаНаОсновании = Истина;
			Шаблон.ПредназначенДляЭлектронныхПисем = Ложь;
			Шаблон.ПредназначенДляSMS = Истина;
			Шаблон.Записать();
		ИначеЕсли Стр.Вид = "ГолосовоеСообщение"  Тогда
			Шаблон.ТекстШаблонаПисьма = СтрЗаменить(Стр.Текст,"$",""+Символы.ПС+"");
			Шаблон.ТекстШаблонаПисьмаHTML = Стр.Текст;
			Шаблон.ТекстШаблонаSMS = СтрЗаменить(Стр.Текст,"$",""+Символы.ПС+"");
			Шаблон.Наименование = Стр.Имя;
			Шаблон.Назначение = "АИД";
			Шаблон.ПолноеИмяТипаПараметраВводаНаОсновании = "Обработка.Аид_ВиртуальныйМенеджер";
			Шаблон.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст;
			Шаблон.ПредназначенДляВводаНаОсновании = Истина;
			Шаблон.ПредназначенДляЭлектронныхПисем = Ложь;
			Шаблон.Аид_ПредназначенДляГолосовогоСообщения = Истина;
			Шаблон.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьШаблон(Имя)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Аид_ШаблоныСообщений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Аид_ШаблоныСообщений КАК Аид_ШаблоныСообщений
	|ГДЕ
	|	Аид_ШаблоныСообщений.ПометкаУдаления = ЛОЖЬ
	|	И Аид_ШаблоныСообщений.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",Имя );
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		Возврат РезультатЗапроса.ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьШаблоныПоУмолчанию(Команда)
		
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение,"Осознаю и соглашаюсь, что отправка данных текстов должна производиться в строгом соответствии с законодательством РФ. 
	|  Соглашаясь с вышеуказанным условием, несу полную ответственность за распространение шаблонов  текстов.
	|  Компания ""Технологии и Бизнес"" не ответственность за содержание шаблонов текстов и/или ее представители ни при каких 
	|  обстоятельствах не несут ответственности за ущерб любого характера, полученный в результате использования данных текстов.", Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	ЗаполнитьШаблоныПоУмолчаниюНаСервере();
	Элементы.Список.Обновить();


КонецПроцедуры

Функция ПолучитьСоответствиеКолонок()
	
	СоответствиеКолонок = Новый Соответствие;
	
	СоответствиеКолонок.Вставить("Имя", 1);
	СоответствиеКолонок.Вставить("Вид", 2);
	СоответствиеКолонок.Вставить("Текст", 3);
	
	
	Возврат СоответствиеКолонок;
	
КонецФункции

#КонецОбласти

