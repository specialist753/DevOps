
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыЗаполнения") и ТипЗнч(Параметры.ПараметрыЗаполнения) = Тип("Структура") тогда
		ДополнительныеПараметры = Параметры.ПараметрыЗаполнения;
		ДополнительныеПараметры.ТекущийОтбор.Вставить("Валюта",ДополнительныеПараметры.Валюта);

		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыЗаполнения); 
		
		ПараметрыЗаполнения = Параметры.ПараметрыЗаполнения;
		Если ТипЗнч(ТекущийОтбор) = Тип("Структура") И ТекущийОтбор.Свойство("ШаблонСообщения") Тогда
			ШаблонСообщения = ТекущийОтбор.ШаблонСообщения;
		КонецЕсли;
		
		Если ПараметрыЗаполнения.Свойство("ЗначенияРеквизитовСообщения") Тогда
			ЗначенияРеквизитовСообщения = ПараметрыЗаполнения.ЗначенияРеквизитовСообщения;
			СформироватьСообщениеНаСервере();
		КонецЕсли;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка передачи параметров для формирования сообщения.",,,,Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСообщениеНаСервере()
	
	Если ЗначенияРеквизитовСообщения = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ВидСообщения = "Почта";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		ВидСообщения = "СообщениеSMS";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда
		ВидСообщения = "ГолосовоеСообщение";
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыОтправки = Аид_ШаблоныСообщенийКлиентСервер.КонструкторПараметровОтправки(ТекущийОтбор.ШаблонСообщения, Неопределено, УникальныйИдентификатор);
	ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения = ВидСообщения;
	
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("Аид_ЗначенияРеквизитовСообщения", ЗначенияРеквизитовСообщения);
	ПараметрыОтправки.Вставить("Валюта",ДополнительныеПараметры.Валюта);
	ПараметрыОтправки.ДополнительныеПараметры.ПреобразовыватьHTMLДляФорматированногоДокумента = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОтправки.ДополнительныеПараметры.УчетнаяЗапись = Аид_ШаблоныСообщенийСлужебный.ПолучитьПочтовыйАдресДляОтправки();
	УстановитьПривилегированныйРежим(Ложь);
	СформированоеСообщение =  Аид_ШаблоныСообщенийСлужебный.СформироватьСообщение(ПараметрыОтправки);
	Если СформированоеСообщение.Свойство("Текст") Тогда
		ТекстСообщения = СформированоеСообщение.Текст;
		Если ТекущийОтбор.ШаблонСообщения.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML 
			И ВидСообщения = "Почта" Тогда
			СообщениеHTML = ТекстСообщения;
			Элементы.Сообщение.Видимость = Ложь;
			Элементы.СообщениеHTML.Видимость = Истина;
		Иначе
			Сообщение.УстановитьТекст(ТекстСообщения);
			Элементы.Сообщение.Видимость = Истина;
			Элементы.СообщениеHTML.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СормироватьСообщение(Команда)
	
	СформироватьСообщениеНаСервере();
	
	ОбновитьДлинуСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДлинуСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеПриИзменении(Элемент)
	
	ОбновитьДлинуСообщения();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДлинуСообщения()
	
	Если ТекущийОтбор.ШаблонСообщения.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML 
		И ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ДлинаСообщенияСимволов = СтрДлина(Аид_ШаблоныСообщенийСлужебный.ПолучитьПростойТекстИзHTML(СообщениеHTML));
	Иначе
		ДлинаСообщенияСимволов = СтрДлина(Сообщение.ПолучитьТекст());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИОтправитьСообщение(Команда)
		
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		и ДополнительныеПараметры.Свойство("ТекущийОтбор") тогда
		
		Результат = СформироватьИОтправитьСообщениеНаСервере(ДополнительныеПараметры.ТекущийОтбор, 
		ДополнительныеПараметры.ЗначенияРеквизитовСообщения, 
		УникальныйИдентификатор);	
		
		Если ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось отправить сообщение по причине: " + Результат.ОписаниеОшибки);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сообщение отправлено успешно.");
			
			Если ДополнительныеПараметры.ТекущийОтбор.РазовоеУведомление Тогда
				УдалитьРазовоеУведомление(ДополнительныеПараметры.ТекущийОтбор);
			КонецЕсли;
		КонецЕсли;
		//Обновляем данные.
		Оповестить("ПолучитьДанные");
	иначе
		//ошибка передачи параметров
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьИОтправитьСообщениеНаСервере(ТекущийОтбор, ЗначенияРеквизитовСообщения, УникальныйИдентификатор)
	
	Если ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ВидСообщения = "Почта";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		ВидСообщения = "СообщениеSMS";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда
		ВидСообщения = "ГолосовоеСообщение";
	Иначе
		Возврат неопределено;
	КонецЕсли;
	
	ПараметрыОтправки = Аид_ШаблоныСообщенийКлиентСервер.КонструкторПараметровОтправки(ТекущийОтбор.ШаблонСообщения, Неопределено, УникальныйИдентификатор);
	ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения = ВидСообщения;
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("КлючРегламентногоЗадания", ТекущийОтбор.КлючРегламентногоЗадания);
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("КлючПравила", ТекущийОтбор.КлючПравила);
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("Аид_ЗначенияРеквизитовСообщения", ЗначенияРеквизитовСообщения);
	ПараметрыОтправки.ДополнительныеПараметры.ПреобразовыватьHTMLДляФорматированногоДокумента = Ложь;
	ПараметрыОтправки.Вставить("Валюта", ЗначенияРеквизитовСообщения.Валюта);
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОтправки.ДополнительныеПараметры.УчетнаяЗапись = Аид_ШаблоныСообщенийСлужебный.ПолучитьПочтовыйАдресДляОтправки();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Аид_ШаблоныСообщенийСлужебный.СформироватьСообщениеИОтправить(ПараметрыОтправки);	
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьРазовоеУведомление(ПараметрыПравила)
	Аид_ОбщегоНазначенияПереопределяемый.УдалитьРазовоеУведомление(ПараметрыПравила);
КонецПроцедуры




