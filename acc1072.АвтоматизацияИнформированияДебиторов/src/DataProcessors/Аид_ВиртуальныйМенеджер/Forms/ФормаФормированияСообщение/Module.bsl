
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыЗаполнения") и ТипЗнч(Параметры.ПараметрыЗаполнения) = Тип("Структура") тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыЗаполнения); 
		
		// Отправляем сразу сообщение.
		// Если отправка выполнилась с ошибками - открываем форму.
		ПараметрыЗаполнения = Параметры.ПараметрыЗаполнения;
		Если ПараметрыЗаполнения.Свойство("ЗначенияРеквизитовСообщения") Тогда
			Отправить = Ложь;
			Если ПараметрыЗаполнения.Свойство("СформироватьИОтправитьБезОткрытия") Тогда
				Отправить = ПараметрыЗаполнения.СформироватьИОтправитьБезОткрытия;
			КонецЕсли;
			СформированоеСообщение = СформироватьСообщениеНаСервере(ПараметрыЗаполнения.ЗначенияРеквизитовСообщения, Отправить);
			
			ТекстСообщения = СформированоеСообщение.Текст;
			Если ТекущийОтбор.ШаблонСообщения.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML Тогда
				ТекстСообщения = Аид_ШаблоныСообщенийСлужебный.ПолучитьПростойТекстИзHTML(ТекстСообщения);	
			КонецЕсли;
	
			Если Не Отправить И СформированоеСообщение.Свойство("Текст") Тогда
				Сообщение.УстановитьТекст(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка передачи параметров для формирования сообщения.",,,,Отказ);
	КонецЕсли;
	
	УстановитьОтборыПравилаФормированияСобытийНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаФормированияСобытийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравилаФормированияСобытийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПравилаФормированияСобытийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыПравилаФормированияСобытийНаСервере()
	
	ЭтотОбъект.ПравилаФормированияСобытий.Отбор.Элементы.Очистить();
	Если ТипЗнч(ЭтотОбъект.ТекущийОтбор) = Тип("Структура") тогда
		Для Каждого КлючЗначение из ЭтотОбъект.ТекущийОтбор Цикл
			НовыйЭлементОтбора = ЭтотОбъект.ПравилаФормированияСобытий.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));

			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(КлючЗначение.Ключ); 
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно; // больше или меньше и т.п.
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ПравоеЗначение = КлючЗначение.Значение; // с чем сравниваем
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СормироватьСообщение(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Функция СформироватьСообщениеНаСервере(ЗначенияРеквизитовСообщения, Отправить = Ложь)
	
	Если ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ВидСообщения = "Почта";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		ВидСообщения = "СообщениеSMS";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда
		ВидСообщения = "ГолосовоеСообщение";
	Иначе
		Возврат неопределено;
	КонецЕсли;
	
	ПараметрыОтправки = Аид_ШаблоныСообщенийКлиентСервер.КонструкторПараметровОтправки(ТекущийОтбор.ШаблонСообщения, Неопределено, УникальныйИдентификатор);
	ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения = ВидСообщения;
	
	Если ЗначенияРеквизитовСообщения.Свойство("Почта") 
		И Не ЗначениеЗаполнено(ЗначенияРеквизитовСообщения.Почта) Тогда
		ЗначенияРеквизитовСообщения.Вставить("Почта", ЭтотОбъект.Почта);	
	КонецЕсли;
	
	Если ЗначенияРеквизитовСообщения.Свойство("Телефон") 
		И Не ЗначениеЗаполнено(ЗначенияРеквизитовСообщения.Телефон) Тогда
		ЗначенияРеквизитовСообщения.Вставить("Телефон", ЭтотОбъект.Телефон);	
	КонецЕсли;
	
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("Аид_ЗначенияРеквизитовСообщения", ЗначенияРеквизитовСообщения);
	ПараметрыОтправки.ДополнительныеПараметры.ПреобразовыватьHTMLДляФорматированногоДокумента = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОтправки.ДополнительныеПараметры.УчетнаяЗапись = Аид_ШаблоныСообщенийСлужебный.ПолучитьПочтовыйАдресДляОтправки();
	УстановитьПривилегированныйРежим(Ложь);
	Если Отправить Тогда
		Возврат Аид_ШаблоныСообщенийСлужебный.СформироватьСообщениеИОтправить(ПараметрыОтправки);	
	Иначе
		Возврат Аид_ШаблоныСообщенийСлужебный.СформироватьСообщение(ПараметрыОтправки);
	КонецЕсли;
	
КонецФункции

 &НаСервере
 Процедура ОтправитьСМСНаСервере()
	 //ВременныйФайл = ПолучитьИмяВременногоФайла(".txt");
	 //
	 //Для каждого Стр Из ТЗ Цикл		
	 //    Если Стр.Флаг Тогда
	 //   	 Получатель = Стр.Телефон;
	 //   	 
	 //   	 // Получаем токен
	 //   	 Отправка=Новый HTTPСоединение("sms.ru",,,,);
	 //   	 Отправка.Получить("http://sms.ru/auth/get_token", ВременныйФайл);
	 //   	 Ответ = Новый ЧтениеТекста(ВременныйФайл);
	 //   	 Токен = Ответ.ПрочитатьСтроку();
	 //   	 Ответ.Закрыть();
	 //   	 
	 //   	 МД5 = НРег(ВычислитьХешСтрокиПоАлгоритмуMD5(ПреобразоватьСтрокуВУТФ8(Пароль) + Токен));
	 //   	 
	 //   	 Отправка=Новый HTTPСоединение("sms.ru",,,,);		
	 //   	 Отправка.Получить(
	 //   	 "http://sms.ru/sms/send?to=" + Строка(Стр.Телефон) + "&text=" + Строка(ТекстСМС) + ?(ПустаяСтрока(Отправитель), "", "&from=" + Отправитель) + "&login=" + Логин + "&partner_id=12737" + "&token=" + Токен + "&sig=" + МД5,
	 //   	 ВременныйФайл
	 //   	 );		
	 //   		 
	 //   	Ответ = Новый ЧтениеТекста(ВременныйФайл);
	 //   	ПерваяСтрока = Ответ.ПрочитатьСтроку();
	 //   	Если ПерваяСтрока="100" Тогда
	 //   		Стр.ИДСообщения = Ответ.ПрочитатьСтроку();
	 //   		Стр.Статус = "Отправка";	
	 //   	ИначеЕсли ПерваяСтрока="-1" Тогда
	 //   		Стр.Статус = "Ошибка, сообщение не найдено.";
	 //   	ИначеЕсли ПерваяСтрока="101" Тогда
	 //   		Стр.Статус = "Сообщение передается оператору";
	 //   	ИначеЕсли ПерваяСтрока="102" Тогда
	 //   		Стр.Статус = "Сообщение отправлено (в пути)";
	 //   	ИначеЕсли ПерваяСтрока="103" Тогда
	 //   		Стр.Статус = "Доставлено";
	 //   	ИначеЕсли ПерваяСтрока="104" Тогда
	 //   		Стр.Статус = "Ошибка, не может быть доставлено: время жизни истекло";
	 //   	ИначеЕсли ПерваяСтрока="105" Тогда
	 //   		Стр.Статус = "Ошибка, не может быть доставлено: удалено оператором";
	 //   	ИначеЕсли ПерваяСтрока="106" Тогда
	 //   		Стр.Статус = "Ошибка, не может быть доставлено: сбой в телефоне";
	 //   	ИначеЕсли ПерваяСтрока="107" Тогда
	 //   		Стр.Статус = "Ошибка, не может быть доставлено: неизвестная причина";
	 //   	ИначеЕсли ПерваяСтрока="108" Тогда
	 //   		Стр.Статус = "Ошибка, не может быть доставлено: отклонено";
	 //   	ИначеЕсли ПерваяСтрока="130" Тогда
	 //   		Стр.Статус = "Не может быть доставлено: превышено количество сообщений на этот номер в день";	
	 //   	ИначеЕсли ПерваяСтрока="131" Тогда
	 //   		Стр.Статус = "Не может быть доставлено: превышено количество одинаковых сообщений на этот номер в минуту";
	 //   	ИначеЕсли ПерваяСтрока="132" Тогда
	 //   		Стр.Статус = "Не может быть доставлено: превышено количество одинаковых сообщений на этот номер в день";	
	 //   	ИначеЕсли ПерваяСтрока="200" Тогда
	 //   		Стр.Статус = "Ошибка, неправильный api_id";	
	 //   	ИначеЕсли ПерваяСтрока="201" Тогда
	 //   		Стр.Статус = "Не хватает средств на лицевом счету";
	 //   	ИначеЕсли ПерваяСтрока="202" Тогда
	 //   		Стр.Статус = "Неправильно указан получатель";
	 //   	ИначеЕсли ПерваяСтрока="203" Тогда
	 //   		Стр.Статус = "Нет текста сообщения";
	 //   	ИначеЕсли ПерваяСтрока="204" Тогда
	 //   		Стр.Статус = "Имя отправителя не согласовано с администрацией";
	 //   	ИначеЕсли ПерваяСтрока="205" Тогда
	 //   		Стр.Статус = "Сообщение слишком длинное (превышает 8 СМС)";
	 //   	ИначеЕсли ПерваяСтрока="206" Тогда
	 //   		Стр.Статус = "Будет превышен или уже превышен дневной лимит на отправку сообщений";
	 //   	ИначеЕсли ПерваяСтрока="207" Тогда
	 //   		Стр.Статус = "На этот номер (или один из номеров) нельзя отправлять сообщения, либо указано более 100 номеров в списке получателей";
	 //   	ИначеЕсли ПерваяСтрока="208" Тогда
	 //   		Стр.Статус = "Параметр time указан неправильно";
	 //   	ИначеЕсли ПерваяСтрока="209" Тогда
	 //   		Стр.Статус = "Вы добавили этот номер (или один из номеров) в стоп-лист";	
	 //   	ИначеЕсли ПерваяСтрока="210" Тогда
	 //   		Стр.Статус = "Ошибка, используется GET, где необходимо использовать POST";
	 //   	ИначеЕсли ПерваяСтрока="211" Тогда
	 //   		Стр.Статус = "Ошибка, метод не найден";	
	 //   	ИначеЕсли ПерваяСтрока="212" Тогда
	 //   		Стр.Статус = "Текст сообщения необходимо передать в кодировке UTF-8 (вы передали в другой кодировке)";			
	 //   	ИначеЕсли ПерваяСтрока="220" Тогда
	 //   		Стр.Статус = "Ошибка, сервис временно недоступен, попробуйте чуть позже";
	 //   	ИначеЕсли ПерваяСтрока="230" Тогда
	 //   		Стр.Статус = "Превышен общий лимит количества сообщений на этот номер в день";	
	 //   	ИначеЕсли ПерваяСтрока="231" Тогда
	 //   		Стр.Статус = "Превышен лимит одинаковых сообщений на этот номер в минуту";
	 //   	ИначеЕсли ПерваяСтрока="232" Тогда
	 //   		Стр.Статус = "Превышен лимит одинаковых сообщений на этот номер в день";
	 //   	ИначеЕсли ПерваяСтрока="300" Тогда
	 //   		Стр.Статус = "Неправильный token (возможно истек срок действия, либо ваш IP изменился)";	
	 //   	ИначеЕсли ПерваяСтрока="301" Тогда
	 //   		Стр.Статус = "Ошибка, неправильный пароль, либо пользователь не найден";
	 //   	ИначеЕсли ПерваяСтрока="302" Тогда
	 //   		Стр.Статус = "Ошибка, пользователь авторизован, но аккаунт не подтвержден (пользователь не ввел код, присланный в регистрационной смс)";
	 //   	Иначе
	 //   		Стр.Статус = "Ошибка, неизвестная ошибка доставки СМС (" + ПерваяСтрока + ")";
	 //   	КонецЕсли;	
	 //   	Ответ.Закрыть();
	 //    КонецЕсли;
	 //КонецЦикла;
	 //
	 //Файл = Новый Файл(ВременныйФайл);
	 //ИмяВременногоФайла = Файл.Имя;
	 //КаталогВременногоФайла = Файл.Путь;	
	 //УдалитьФайлы(КаталогВременногоФайла, ИмяВременногоФайла);
	 //
	 //ОбновитьБалансНаСервре();
 КонецПроцедуры



