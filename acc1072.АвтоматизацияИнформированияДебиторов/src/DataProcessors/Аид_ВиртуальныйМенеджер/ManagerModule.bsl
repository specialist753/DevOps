#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.ТипШаблона = "ГолосовоеСообщение" Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ДополнительныеПараметры.ПолноеИмяТипаНазначения);
		ЧастиИмени      = СтрРазделить(ДополнительныеПараметры.ПолноеИмяТипаНазначения, ".");
		Если ЧастиИмени.Количество() >= 2 Тогда
			КлассОМ = ЧастиИмени[0];
			ИмяОМ   = ЧастиИмени[1];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
	ТаблицаДанных = Сообщение.ЗначенияРеквизитов.Получить("АИД_ТаблицаДанных");
	Если ТаблицаДанных <> неопределено 
		И Сообщение.ДополнительныеПараметры.Свойство("Аид_ЗначенияРеквизитовСообщения") Тогда
		
		ЗначенияРеквизитовСообщения = Сообщение.ДополнительныеПараметры["Аид_ЗначенияРеквизитовСообщения"];
		Если ТаблицаДанных.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаДанных[0], ЗначенияРеквизитовСообщения);
			
			РеквизитыДляСтроки = ТаблицаДанных[0].РеквизитыДляСтроки;
			Для Каждого Реквизит из РеквизитыДляСтроки Цикл
				ЗначениеРеквизита = ПолучитьЗначениеРеквизитаСообщения(ЗначенияРеквизитовСообщения, Реквизит.Ключ);
				Если Сообщение.ДополнительныеПараметры.ВидСообщения = "ГолосовоеСообщение" И ТипЗнч(ЗначениеРеквизита) = Тип("Число") Тогда
					Если ДополнительныеПараметры.Свойство("Валюта") Тогда 
						Если ЗначениеЗаполнено(ДополнительныеПараметры.Валюта.Аид_НаименованиеВалюты) Тогда 
							ЗначениеРеквизита = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ЗначениеРеквизита,ДополнительныеПараметры.Валюта);
						Иначе
							ЗначениеРеквизита = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ЗначениеРеквизита,ДополнительныеПараметры.Валюта);
						КонецЕсли;
						
					Иначе
						ЗначениеРеквизита = СтрЗаменить(ЗначениеРеквизита,","," рублей ") + " копеек";
					КонецЕсли;
					РеквизитыДляСтроки.Вставить(Реквизит.Ключ, ЗначениеРеквизита);
				Иначе
					Если ТипЗнч(ЗначениеРеквизита) = тип("Число") Тогда 
						ЗначениеРеквизита = Формат(ЗначениеРеквизита,"ЧЦ=15; ЧДЦ=2");
						Если ЗначениеЗаполнено(ДополнительныеПараметры.Валюта.Аид_НаименованиеВалюты) Тогда 
							ЗначениеРеквизита = ЗначениеРеквизита+" " +ДополнительныеПараметры.Валюта.Аид_НаименованиеВалюты;
						Иначе 
							ЗначениеРеквизита = ЗначениеРеквизита+" " +ДополнительныеПараметры.Валюта.Наименование;
						КонецЕсли;
						
						РеквизитыДляСтроки.Вставить(Реквизит.Ключ, ЗначениеРеквизита);
					Иначе
						РеквизитыДляСтроки.Вставить(Реквизит.Ключ, ЗначениеРеквизита);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Функция СчетаПоЗаказу(Заказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.СчетНаОплатуПокупателю КАК Счет
				   |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Ссылка = &Заказ";
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СвязанныеДокументы.Ссылка КАК Счет
	//               |ИЗ
	//               |	КритерийОтбора.СвязанныеДокументы(&Заказ) КАК СвязанныеДокументы
	//               |ГДЕ
	//               |	СвязанныеДокументы.Ссылка ССЫЛКА Документ.СчетНаОплатуПокупателю";
	////Запрос.Текст = "ВЫБРАТЬ
	//|	СвязанныеДокументы.Ссылка КАК Счет
	//|ИЗ
	//|	КритерийОтбора.СвязанныеДокументы(&Заказ) КАК СвязанныеДокументы
	//|
	//|ГДЕ
	//|	СвязанныеДокументы.Ссылка ССЫЛКА Документ.СчетНаОплатуКлиенту
	//|	И СвязанныеДокументы.Ссылка.Проведен
	//|";
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат.ВыгрузитьКолонку("Счет");
КонецФункции

Функция ПоместитьТабличныйДокументОтчетаВоВременноеХранилище(ТабличныйДокумент)
	
	Результат = новый Соответствие;	
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ПолныйПутьКФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки);
		
	ИмяФайла = "Счет на оплату";
	
	
	ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла);
	Если Прав(ИмяФайла, 1) = "." Тогда
		ИмяФайла = ИмяФайла + "pdf";
	Иначе
		ИмяФайла = ИмяФайла + ".pdf";
	КонецЕсли;
	
	ПолноеИмяФайла = УникальноеИмяФайла(ПолныйПутьКФайлу + ИмяФайла);
	
	ТабличныйДокумент.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);
	
	Результат.Вставить(ИмяФайла,Новый ДвоичныеДанные(ПолноеИмяФайла));
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

Функция УникальноеИмяФайла(ИмяФайла)
	
	Файл = Новый Файл(ИмяФайла);
	ИмяБезРасширения = Файл.ИмяБезРасширения;
	Расширение = Файл.Расширение;
	Папка = Файл.Путь;
	
	Счетчик = 1;
	Пока Файл.Существует() Цикл
		Счетчик = Счетчик + 1;
		Файл = Новый Файл(Папка + ИмяБезРасширения + " (" + Счетчик + ")" + Расширение);
	КонецЦикла;
	
	Возврат Файл.ПолноеИмя;
	
КонецФункции

Функция ПолучитьЗначениеРеквизитаСообщения(ЗначенияРеквизитовСообщения, КлючРеквизита)
	  
	ПутьКРеквизитуМассив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючРеквизита, ".");
	Если ПутьКРеквизитуМассив.Количество() = 1 Тогда
		Возврат ЗначенияРеквизитовСообщения[ПутьКРеквизитуМассив[0]];
	ИначеЕсли ПутьКРеквизитуМассив.Количество() > 0 Тогда
		Значение = ЗначенияРеквизитовСообщения[ПутьКРеквизитуМассив[0]];
		ПутьКРеквизитуМассив.Удалить(0);
		
		
		Для каждого Путь из ПутьКРеквизитуМассив Цикл
			Попытка
				Значение = Значение[Путь];
			Исключение
				Если ТипЗнч(Значение) <> Тип("Строка")  Тогда 
					Значение = ПолучитьЗначениеКонтактнойИнформации(Значение, Путь);
				КонецЕсли;
			КонецПопытки;
		КонецЦикла;
		Возврат Значение;
	КонецЕсли;
	
	Возврат неопределено;
	
КонецФункции	

Функция ПолучитьЗначениеКонтактнойИнформации(Значение, ИмяРеквизита)
	
	КонтактнаяИнформацияОбъектов = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");	
		
		ОбъектыСКонтактнойИнформацией = Новый Массив;
			
		Если ТипЗнч(Значение) = Тип("СправочникСсылка.Контрагенты") 
			Или ТипЗнч(Значение) = Тип("СправочникСсылка.КонтактныеЛица")
			Или ТипЗнч(Значение) = Тип("СправочникСсылка.Организации")
			Тогда
			ОбъектыСКонтактнойИнформацией.Добавить(Значение);
		КонецЕсли;
		ВидыКонтактнойИнформации = МодульУправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацииОбъекта(Значение.Ссылка);
		Если ВидыКонтактнойИнформации.Количество() > 0 Тогда
			КонтактнаяИнформацияОбъектов = МодульУправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(ОбъектыСКонтактнойИнформацией,,, ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	Если КонтактнаяИнформацияОбъектов = неопределено Тогда
		Возврат неопределено;
	КонецЕсли;
	
	Для каждого ЭлемИнф из КонтактнаяИнформацияОбъектов Цикл
		Если ЭлемИнф.Вид.Наименование = ИмяРеквизита Тогда
			Возврат ЭлемИнф.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Возврат неопределено;
	
КонецФункции

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
	Если ПолучателиSMS.Количество() = 0 
	 И ПредметСообщения.Свойство("Аид_ЗначенияРеквизитовСообщения") Тогда
	 
		 Если ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Свойство("Телефон") 
			 И ЗначениеЗаполнено(СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Телефон)) Тогда
			 
			 Телефон = СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Телефон);
			 НовыйПолучатель = ПолучателиSMS.Добавить();
			 НовыйПолучатель.НомерТелефона = СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Телефон);
			 Если ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Свойство("КонтактноеЛицо") Тогда  
				 Если ТипЗнч(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо) = Тип("Строка") Тогда 
					 НовыйПолучатель.Представление = ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо;
					 Иначе
			 	НовыйПолучатель.Представление = ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо.Наименование;
				КонецЕсли;
			КонецЕсли;
		//Иначе
		//	 НовыйПолучатель = ПолучателиSMS.Добавить();
		//	 НовыйПолучатель.НомерТелефона = "+7123456799";
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
	Если ПолучателиПисьма.Количество() = 0 
	 И ПредметСообщения.Свойство("Аид_ЗначенияРеквизитовСообщения") Тогда
	 
		 Если ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Свойство("Почта") 
			 И ЗначениеЗаполнено(СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Почта)) Тогда
			 
			 Почта = СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Почта);
			 НовыйПолучатель = ПолучателиПисьма.Добавить();
			 НовыйПолучатель.Адрес = СокрЛП(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Почта);
			 Если ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.Свойство("КонтактноеЛицо") Тогда  
				 Если ТипЗнч(ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо) = Тип("Строка") Тогда 
					 НовыйПолучатель.Представление = ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо;
				 иначе
					 НовыйПолучатель.Представление = ПредметСообщения.Аид_ЗначенияРеквизитовСообщения.КонтактноеЛицо.Наименование;
				 КонецЕсли;
			 КонецЕсли;
		//Иначе
		//	 НовыйПолучатель = ПолучателиПисьма.Добавить();
		//	 НовыйПолучатель.Адрес = "poklonna1@gmail.com";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьДатуАктуальностиДЗ() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	        |	Аид_ДатаАктуальностиДЗ.ДатаАктуальностиДЗ КАК ДатаАктуальностиДЗ
	        |ИЗ
	        |	РегистрСведений.Аид_ДатаАктуальностиДЗ КАК Аид_ДатаАктуальностиДЗ
	        |ГДЕ
	        |	Аид_ДатаАктуальностиДЗ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.ДатаАктуальностиДЗ;
	КонецЕсли;
	Возврат Дата(1, 1, 1);
КонецФункции

Процедура ЗаполнитьМассивОбъектовДляПечати(МассивОбъектов, ДополнительныеПараметры) Экспорт
	
	Если НЕ ДополнительныеПараметры.Свойство("Аид_ЗначенияРеквизитовСообщения") Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияРеквизитовСообщения = ДополнительныеПараметры["Аид_ЗначенияРеквизитовСообщения"];
	//Костя  Было "ДокументСсылка.СчетНаОплатуКлиенту
	Если ТипЗнч(ЗначенияРеквизитовСообщения.ОбъектРасчетов) = тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
		МассивОбъектов.Добавить(ЗначенияРеквизитовСообщения.ОбъектРасчетов);
	ИначеЕсли ТипЗнч(ЗначенияРеквизитовСообщения.ОбъектРасчетов) = тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Счета = СчетаПоЗаказу(ЗначенияРеквизитовСообщения.ОбъектРасчетов);
		Для каждого Счет из Счета Цикл
		Если ТипЗнч(Счет) = тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда 
			МассивОбъектов.Добавить(Счет);	
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры
