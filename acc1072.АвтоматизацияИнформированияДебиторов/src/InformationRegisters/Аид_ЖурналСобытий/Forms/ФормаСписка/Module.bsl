
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мДатаСобытия = Дата(1,1,1);
	
	Если Параметры.Свойство("ДатаСобытия", мДатаСобытия) и ЗначениеЗаполнено(мДатаСобытия) тогда
		
		ГруппаДатаСобытия = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "Дата события", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаДатаСобытия,
			"ДатаВремяСобытия",
			ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
			КонецДня(мДатаСобытия),
			, ЗначениеЗаполнено(мДатаСобытия));
			
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
			ГруппаДатаСобытия,
			"ДатаВремяСобытия",
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			НачалоДня(мДатаСобытия),
			, ЗначениеЗаполнено(мДатаСобытия));	
		
	КонецЕсли;
		
	Если Параметры.Свойство("ТипСообщения") тогда
				
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));

		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипСообщения");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Параметры.ТипСообщения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусДоставки(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.СтатусСобытия = Ложь Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сообщение не было отправлено!");
		Возврат;	
	КонецЕсли;
	
	ОбновитьСтатусДоставкиНаСервере(ТекущиеДанные.УникальныйКлючЗаписи, ТекущиеДанные.ТипСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСтатусДоставкиНаСервере(ИдентификаторСообщения, ТипСообщения)
	
	Если ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда 
		Аид_ОтправкаГолосовойПочты.СтатусДоставки(ИдентификаторСообщения);
	ИначеЕсли ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		Аид_ОтправкаSMS.СтатусДоставки(ИдентификаторСообщения);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Элементы.ФормаИзменить.Видимость = Ложь;
	//Элементы.ФормаСкопировать.Видимость = Ложь;
	//Элементы.ФормаСоздать.Видимость = Ложь;
	//Элементы.ФормаУдалить.Видимость = Ложь;

КонецПроцедуры

