
&НаКлиенте
Процедура Отправить(Команда)
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		и ДополнительныеПараметры.Свойство("ТекущийОтбор") тогда
		ДополнительныеПараметры.ТекущийОтбор.Вставить("ТипСообщения",Элементы.Список.ТекущиеДанные.ТипСообщения);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("ШаблонСообщения",Элементы.Список.ТекущиеДанные.ШаблонСообщения);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("КлючРегламентногоЗадания",Элементы.Список.ТекущиеДанные.КлючРегламентногоЗадания);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("КлючПравила",Элементы.Список.ТекущиеДанные.КлючПравила);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("РазовоеУведомление",Элементы.Список.ТекущиеДанные.РазовоеУведомление);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("ВидДоговора",Элементы.Список.ТекущиеДанные.ВидДоговора);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("ОбъектРасчетов",Элементы.Список.ТекущиеДанные.ОбъектРасчетов);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("КоличествоДнейЗадолженности",Элементы.Список.ТекущиеДанные.КоличествоДнейЗадолженности);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("СтатусКонтрагента",Элементы.Список.ТекущиеДанные.СтатусКонтрагента);
		ДополнительныеПараметры.ТекущийОтбор.Вставить("ДеньНедели",ПолучитьНомерДня(Элементы.Список.ТекущиеДанные.ДеньНеделипрописью));
		ДополнительныеПараметры.ТекущийОтбор.Вставить("Контрагент",Элементы.Список.ТекущиеДанные.Контрагент);
		
		
		Результат = СформироватьИОтправитьСообщениеНаСервере(ДополнительныеПараметры.ТекущийОтбор, 
		ДополнительныеПараметры.ЗначенияРеквизитовСообщения, 
		УникальныйИдентификатор,Валюта);	
		
		Если ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось отправить сообщение по причине: " + Результат.ОписаниеОшибки);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сообщение отправлено успешно.");
			
			Если ДополнительныеПараметры.ТекущийОтбор.РазовоеУведомление Тогда
				УдалитьРазовоеУведомление(ДополнительныеПараметры.ТекущийОтбор);
			КонецЕсли;
			
		КонецЕсли;
		
		Оповестить("ПолучитьДанные");
	иначе
		//ошибка передачи параметров
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДополнительныеПараметры = Параметры.ДополнительныеПараметры;
	Если Параметры.Свойство("ДополнительныеПараметры") и ТипЗнч(Параметры.ПараметрыЗаполнения) = Тип("Структура") тогда
		
		Валюта = Параметры.Валюта;
		ДополнительныеПараметры = Параметры.ПараметрыЗаполнения;
		СписокПравил = Новый СписокЗначений;
		СписокПравил.ЗагрузитьЗначения(ДополнительныеПараметры.Текущийотбор.МассивКлючейПравил);
		Если СписокПравил.Количество() <> 0 Тогда 
			ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
			ЭлементОтбора =  ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлючПравила");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ПравоеЗначение = СписокПравил;
			
			ЭлементОтбора =  ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеньНедели");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ПравоеЗначение = ДополнительныеПараметры.ДеньНедели;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыЗаполнения); 
		ПараметрыЗаполнения = Параметры.ПараметрыЗаполнения;
		Если ПараметрыЗаполнения.Свойство("ЗначенияРеквизитовСообщения") Тогда
			ЗначенияРеквизитовСообщения = ПараметрыЗаполнения.ЗначенияРеквизитовСообщения;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьСообщениеНаСервере(ТекДанные)
	
	Если ЗначенияРеквизитовСообщения = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ВидСообщения = "Почта";
	ИначеЕсли ТекДанные.ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		ВидСообщения = "СообщениеSMS";
	ИначеЕсли ТекДанные.ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда
		ВидСообщения = "ГолосовоеСообщение";
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыОтправки = Аид_ШаблоныСообщенийКлиентСервер.КонструкторПараметровОтправки(ТекДанные.ШаблонСообщения, Неопределено, УникальныйИдентификатор);
	ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения = ВидСообщения;
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("Аид_ЗначенияРеквизитовСообщения", ЗначенияРеквизитовСообщения);
	ПараметрыОтправки.ДополнительныеПараметры.ПреобразовыватьHTMLДляФорматированногоДокумента = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОтправки.ДополнительныеПараметры.УчетнаяЗапись = Аид_ШаблоныСообщенийСлужебный.ПолучитьПочтовыйАдресДляОтправки();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПараметрыОтправки.Вставить("Валюта",Валюта);
	СформированоеСообщение =  Аид_ШаблоныСообщенийСлужебный.СформироватьСообщение(ПараметрыОтправки);
	Если СформированоеСообщение.Свойство("Текст") Тогда
		ТекстСообщения = СформированоеСообщение.Текст;
		Если ТекДанные.ШаблонСообщения.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML 
			И ВидСообщения = "Почта" Тогда
			СообщениеHTML = ТекстСообщения;
			Элементы.Сообщение.Видимость = Ложь;
			Элементы.СообщениеHTML.Видимость = Истина;
		Иначе
			Сообщение.УстановитьТекст(ТекстСообщения);
			Элементы.Сообщение.Видимость = Истина;
			Элементы.СообщениеHTML.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	//Удаляем регл. задания по текущему правилу.
	УдалитьРеглЗаданияПередУдалениемПравила();
КонецПроцедуры

&НаСервере
Процедура УдалитьРеглЗаданияПередУдалениемПравила()
	
	МассивКлючей = Новый Массив;
	СтрокиДляУдаления = ЭтаФорма.Элементы.Список.ВыделенныеСтроки;
	Для каждого СтрокаКУдалению из СтрокиДляУдаления Цикл
		МассивКлючей.Добавить(СтрокаКУдалению.КлючРегламентногоЗадания);
	КонецЦикла;
	
	Аид_ОбщегоНазначенияПереопределяемый.УдалениеРегламентныхЗаданийАИД(МассивКлючей);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не НастройкаРегЗаданийВыполнена() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выполните настройку регламентных заданий АИД!'"));
		
		КлючЗаписиНастроек = ПолучитьКлючЗаписиНастроекРегЗаданий();
		Если КлючЗаписиНастроек = неопределено Тогда
			ОткрытьФорму("РегистрСведений.Аид_Настройки.ФормаЗаписи");
		Иначе
			ОткрытьФорму("РегистрСведений.Аид_Настройки.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписиНастроек));
		КонецЕсли;
		
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НастройкаРегЗаданийВыполнена()
	Возврат Аид_ОбщегоНазначенияПереопределяемый.НастройкаРегЗаданийВыполнена();
КонецФункции

&НаСервере
Функция ПолучитьКлючЗаписиНастроекРегЗаданий()
	
	Набор = РегистрыСведений.Аид_Настройки.СоздатьНаборЗаписей();
	Набор.Отбор.Организация.Установить(Справочники.Организации.ПустаяСсылка());
	
	Набор.Прочитать();
	
	Если Набор.Количество() = 1 Тогда
		Возврат РегистрыСведений.Аид_Настройки.СоздатьКлючЗаписи(Новый Структура("Организация", Справочники.Организации.ПустаяСсылка()));
	КонецЕсли;
	
	Возврат неопределено;
	
КонецФункции
&НаСервереБезКонтекста
Функция СформироватьИОтправитьСообщениеНаСервере(ТекущийОтбор, ЗначенияРеквизитовСообщения, УникальныйИдентификатор,Валюта)
	
	Если ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ВидСообщения = "Почта";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.SMS Тогда
		ВидСообщения = "СообщениеSMS";
	ИначеЕсли ТекущийОтбор.ТипСообщения = Перечисления.Аид_ТипыСообщений.ГолосовоеСообщение Тогда
		ВидСообщения = "ГолосовоеСообщение";
	Иначе
		Возврат неопределено;
	КонецЕсли;
	
	ПараметрыОтправки = Аид_ШаблоныСообщенийКлиентСервер.КонструкторПараметровОтправки(ТекущийОтбор.ШаблонСообщения, Неопределено, УникальныйИдентификатор);
	ПараметрыОтправки.ДополнительныеПараметры.ВидСообщения = ВидСообщения;
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("КлючРегламентногоЗадания", ТекущийОтбор.КлючРегламентногоЗадания);
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("КлючПравила", ТекущийОтбор.КлючПравила);
	ПараметрыОтправки.Вставить("Валюта", Валюта);
	
	ПараметрыОтправки.ДополнительныеПараметры.Вставить("Аид_ЗначенияРеквизитовСообщения", ЗначенияРеквизитовСообщения);
	ПараметрыОтправки.ДополнительныеПараметры.ПреобразовыватьHTMLДляФорматированногоДокумента = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыОтправки.ДополнительныеПараметры.УчетнаяЗапись = Аид_ШаблоныСообщенийСлужебный.ПолучитьПочтовыйАдресДляОтправки();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Аид_ШаблоныСообщенийСлужебный.СформироватьСообщениеИОтправить(ПараметрыОтправки);	
	
КонецФункции

&НаКлиенте
Функция ПолучитьНомерДня(лпДеньНеделипрописью)
	Если лпДеньНеделипрописью = "Понедельник" Тогда 
		Возврат 1;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Вторник" Тогда 
		Возврат 2;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Среда" Тогда 
		Возврат 3;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Черверг" Тогда 
		Возврат 4;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Пятница" Тогда 
		Возврат 5;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Суббота" Тогда 
		Возврат 6;
	КонецЕсли;
	Если лпДеньНеделипрописью = "Воскресенье" Тогда 
		Возврат 7;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьРазовоеУведомление(ПараметрыПравила)
	Аид_ОбщегоНазначенияПереопределяемый.УдалитьРазовоеУведомление(ПараметрыПравила);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ТекДанные = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда 
		СформироватьСообщениеНаСервере(ТекДанные);
		ОбновитьДлинуСообщения(ТекДанные);
		ПолучитьПредставлениеПериода(ТекДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПредставлениеПериода(ТекДанные)
	Если ТекДанные.ДеньНеделиПрописью = "Понедельник" Тогда 
		Элементы.Декорация1.Заголовок = "Пн.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Вторник" Тогда 
		Элементы.Декорация1.Заголовок = "Вт.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Среда" Тогда 
		Элементы.Декорация1.Заголовок = "Ср.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Черверг" Тогда 
		Элементы.Декорация1.Заголовок = "Чт.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Пятница" Тогда 
		Элементы.Декорация1.Заголовок = "Пт.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Суббота" Тогда 
		Элементы.Декорация1.Заголовок = "Сб.";
	КонецЕсли;
	Если ТекДанные.ДеньНеделиПрописью = "Воскресенье" Тогда 
		Элементы.Декорация1.Заголовок = "Вс.";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДлинуСообщения(ТекДанные)
	
	Если ТекДанные.ШаблонСообщения.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.HTML 
		И ТекДанные.ТипСообщения = Перечисления.Аид_ТипыСообщений.Email Тогда
		ДлинаСообщенияСимволов = СтрДлина(Аид_ШаблоныСообщенийСлужебный.ПолучитьПростойТекстИзHTML(СообщениеHTML));
	Иначе
		ДлинаСообщенияСимволов = СтрДлина(Сообщение.ПолучитьТекст());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры






